{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","name","quantity","item","setItem","menu","setMenu","handleChange","e","target","value","addItem","event","preventDefault","id","Date","now","Container","Form","onSubmit","className","Row","Col","xs","md","size","offset","Input","type","placeholder","onChange","Button","color","onClick","map","todo","index","outline","btn","document","getElementById","style","textDecoration","crossItem","filter","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.e108d471.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Row, Col, Button, Input, Form } from \"reactstrap\";\nimport { TiTimes, TiInputChecked, TiHeart } from \"react-icons/ti\";\n\nfunction App() {\n  const [item, setItem] = useState({ name: \"\", quantity: \"\" });\n  const [menu, setMenu] = useState([]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setItem({ ...item, [name]: value });\n  };\n\n  const addItem = (event) => {\n    event.preventDefault();\n    if (item.name !== \"\") {\n      setMenu([\n        ...menu,\n        { id: Date.now(), value: item.name, quantity: item.quantity },\n      ]);\n      setItem({ name: \"\", quantity: \"\" });\n    }\n    \n  };\n\n  const crossItem = (id) => {\n    const btn = document.getElementById(id);\n    btn.style.textDecoration =\n      btn.style.textDecoration === \"line-through\" ? \"none\" : \"line-through\";\n  };\n\n  const delItem = (id) => {\n    setMenu(menu.filter((value) => value.id !== id));\n  };\n\n  return (\n    <Container>\n      <Form onSubmit={addItem} className=\"sticky-top bg-white\">\n        <Row>\n          <Col className=\"text-center mt-4\">\n            <h2>Shopping list</h2>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs=\"8\" md={{ size: 5, offset: 2 }}>\n            <Input\n              name=\"name\"\n              type=\"text\"\n              placeholder=\"Item\"\n              value={item.name}\n              onChange={handleChange}\n            />\n          </Col>\n          <Col xs=\"4\" md=\"3\">\n            <Input\n              name=\"quantity\"\n              type=\"text\"\n              placeholder=\"Qty\"\n              value={item.quantity}\n              onChange={handleChange}\n            />\n          </Col>\n        </Row>\n        <Row>\n          <Col className=\"text-center m-2 \">\n            <Button\n              className=\"m-1\"\n              color=\"danger\"\n              onClick={() => {\n                setMenu([]);\n              }}\n            >\n              Clear list\n            </Button>\n            <Button\n              type=\"submit\"\n              className=\"m-1\"\n              color=\"primary\"\n              onClick={addItem}\n            >\n              Add Item\n            </Button>\n          </Col>\n        </Row>\n      </Form>\n      <Row>\n        <Col>\n          {menu.map((todo, index) => (\n            <Button\n              className=\"m-1\"\n              id={todo.id}\n              key={index}\n              color=\"primary\"\n              outline\n            >\n              <TiInputChecked\n                className=\"mx-1\"\n                color=\"green\"\n                onClick={() => crossItem(todo.id)}\n              />\n              | {todo.value}\n              {todo.quantity !== \"\" ? \": \" : \"\"}\n              {todo.quantity} |\n              <TiTimes\n                className=\"mx-1\"\n                onClick={() => delItem(todo.id)}\n                color=\"red\"\n              />\n            </Button>\n          ))}\n        </Col>\n      </Row>\n      <Row>\n        <span className=\"text-center fixed-bottom bg-white \">\n          Made with <TiHeart color=\"red\" /> by{\" \"}\n          <a\n            href=\"https://github.com/zahidmuhammed\"\n            style={{ textDecoration: \"none\", color: \"GrayText\" }}\n          >\n            Zahid\n          </a>\n        </span>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}